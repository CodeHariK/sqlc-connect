// Code generated by sqlc-connect (https://github.com/walterwanderley/sqlc-connect). DO NOT EDIT.

package main

import (
    "database/sql"
    "net/http"

    "connectrpc.com/connect"  
    "connectrpc.com/grpcreflect"
    "github.com/jackc/pgx/v5/pgxpool"

    {{range .Packages}}{{.Package}}_app "{{ .GoModule}}/{{.SrcPath}}"
    {{.Package}}_v1connect "{{ .GoModule}}/api/{{.Package | SnakeCase}}/v1/v1connect"
	{{end}}
)


func registerHandlers(mux *http.ServeMux, db {{if eq .SqlPackage "pgx/v5"}}*pgxpool.Pool{{else}}*sql.DB{{end}}, interceptors []connect.Interceptor) {
    {{range .Packages}}{{.Package}}Service := {{.Package}}_app.NewService({{if .EmitDbArgument}}{{.Package}}_app.New(), db{{else}}{{.Package}}_app.New(db){{end}})
    {{.Package}}Path, {{.Package}}Handler := {{.Package}}_v1connect.New{{.Package | PascalCase}}ServiceHandler({{.Package}}Service, 
        connect.WithInterceptors(
            interceptors...,
        ),
    )
    mux.Handle({{.Package}}Path, {{.Package}}Handler)
	{{end}}

    reflector := grpcreflect.NewStaticReflector(
		{{range .Packages}}{{.Package}}_v1connect.{{.Package | PascalCase}}ServiceName,
        {{end}}
	)
	mux.Handle(grpcreflect.NewHandlerV1(reflector))
	mux.Handle(grpcreflect.NewHandlerV1Alpha(reflector))
}