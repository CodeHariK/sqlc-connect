// Code generated by sqlc-connect (https://github.com/walterwanderley/sqlc-connect). DO NOT EDIT.

package main

import (
	"net/http"

	"connectrpc.com/connect"
	"connectrpc.com/grpcreflect"
	"github.com/jackc/pgx/v5/pgxpool"

	googleuuid_v1connect "uuidcheck/api/googleuuid/v1/v1connect"
	pguuid_v1connect "uuidcheck/api/pguuid/v1/v1connect"
	googleuuid_app "uuidcheck/store/googleuuid"
	pguuid_app "uuidcheck/store/pguuid"
)

func registerHandlers(mux *http.ServeMux, db *pgxpool.Pool, interceptors []connect.Interceptor) {
	googleuuidService := googleuuid_app.NewService(googleuuid_app.New(db))
	googleuuidPath, googleuuidHandler := googleuuid_v1connect.NewGoogleuuidServiceHandler(googleuuidService,
		connect.WithInterceptors(
			interceptors...,
		),
	)
	mux.Handle(googleuuidPath, googleuuidHandler)
	pguuidService := pguuid_app.NewService(pguuid_app.New(db))
	pguuidPath, pguuidHandler := pguuid_v1connect.NewPguuidServiceHandler(pguuidService,
		connect.WithInterceptors(
			interceptors...,
		),
	)
	mux.Handle(pguuidPath, pguuidHandler)

	reflector := grpcreflect.NewStaticReflector(
		googleuuid_v1connect.GoogleuuidServiceName,
		pguuid_v1connect.PguuidServiceName,
	)
	mux.Handle(grpcreflect.NewHandlerV1(reflector))
	mux.Handle(grpcreflect.NewHandlerV1Alpha(reflector))
}
